main:
  params: [input]
  steps:
    - init:
        assign: 
          - project: "abinbev-case-eric"
          - location: "southamerica-east1"
          - imageName: "dataproc-export-to-bq"

    - submit_batch_job:
        call: http.post
        args:
          url: ${"batch.googleapis.com/v1/projects/" + project + "/locations/" + location + "/jobs"}
          auth:
            type: OAuth2
          body:
            taskGroups:
              taskSpec:
                computeResource:
                  cpuMilli: 1000
                  memoryMib: 512
                runnables:
                  container:
                    imageUri: ${"gcr.io/" + project + "/" + imageName + ":latest"}
                    entrypoint: ""
                    volumes: []
                volumes: []
            allocationPolicy:
              instances:
                - policy:
                    provisioningModel: "STANDARD"
                    machineType: "e2-medium"
            logsPolicy:
              destination: "CLOUD_LOGGING"
        result: submit_result

    - log_batch_info:
        call: sys.log
        args:
            text: '${"Batch Job UID: " + submit_result.body.uid}'
            severity: INFO
            
    - wait_ten_seconds:
        call: sys.sleep
        args:
            seconds: 10

    - check_batch_status:
        try:
            call: http.get
            args:
                url: ${"batch.googleapis.com/v1/" + submit_result.body.name}
                auth:
                    type: OAuth2
            result: batch_response
        retry: ${http.default_retry}

    - check_response:
        switch:
            - condition: ${batch_response.body.status.state != "SUCCEEDED" and batch_response.body.status.state != "FAILED" and batch_response.body.status.state != "CANCELLED"}
              next: wait_ten_seconds
            - condition: ${batch_response.body.status.state == "FAILED"}
              next: raise_except

    - raise_except:
        raise: '${"Batch " + submit_result.body.uid + " failed: Check batch logs for more info."}'
                
    - result_show:
        return: ${batch_response}
